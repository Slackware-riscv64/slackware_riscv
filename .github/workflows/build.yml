name: Build CI

on:
  push:
  pull_request:
  release:
    types: [published]
  check_suite:
    type: [rerequested]

jobs:
  chroot-testing:
    runs-on: ubuntu-20.04
    steps:
    - name: Installs qemu-riscv64-static
      run: |
        sudo apt-get install -q debootstrap qemu-user-static binfmt-support debian-ports-archive-keyring
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Builds a Slackware-riscv64 Chroot
      run: |
        chroot=slackware-riscv64-chroot
        mkdir -p $chroot/sbin
        tar xfvJ slackware-current/slackware/a/pkgtools-15.0-noarch-6.txz sbin/installpkg
        sudo mv sbin/installpkg /sbin/
        rmdir sbin/
        find slackware-current/slackware/ -type f -name aaa\*txz -exec sudo installpkg --root $chroot {} \;
        find slackware-current/slackware/ -type f -name *txz -exec sudo installpkg --root $chroot {} \;
        sudo cp $(which qemu-riscv64-static) $chroot/usr/bin
    - name: Basic test of Slackware-riscv64 Chroot
      run: |
        echo "Packages in repo: $(sudo find slackware-current/ -type f -name *txz|wc -l)"
        echo "Chroot size: $(sudo du -sh slackware-riscv64-chroot | awk '{print $1}' )"
        export LD_LIBRARY_PATH=/lib:/lib64/:/lib64/lp64d/:/usr/lib:/usr/lib64/
        sudo chroot slackware-riscv64-chroot qemu-riscv64-static /bin/true
        sudo chroot slackware-riscv64-chroot qemu-riscv64-static /bin/bash --version
        sudo chroot slackware-riscv64-chroot qemu-riscv64-static /usr/bin/gcc --version
        sudo chroot slackware-riscv64-chroot qemu-riscv64-static /bin/gawk --version
